name: format-and-push

permissions:
  contents: write

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - scarlet-queen-core
          - scarlet-queen-entrypoint
          - scarlet-queen-fitness
          - scarlet-queen-generation
          - scarlet-queen-initializer
          - scarlet-queen-replenisher
          - scarlet-queen-selector
    name: ${{ matrix.crate }}-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Build Check (${{ matrix.crate }})
        run: nix develop --command bash -c "cargo build --release --verbose -p ${{ matrix.crate }}"
      - name: Test (${{ matrix.crate }})
        run: nix develop --command bash -c "cargo test --verbose -p ${{ matrix.crate }}"
      - name: Lint (${{ matrix.crate }})
        run: nix develop --command bash -c "cargo clippy -p ${{ matrix.crate }} --all-targets --all-features -- --deny warnings"
  format-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Format Rust Program
        run: nix develop --command bash -c "cargo fmt --all"
      - name: Format TOML File
        run: |
          npm i
          npm run fmt
      - name: Push Formatted Code
        run: |
          git config --local user.name "actions-user"
          git config --local user.email "actions@github.com"
          git add .
          git diff --staged --exit-code || (git commit -m 'Release: ${{ github.sha }}' && git push)
